{"version":3,"sources":["serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js","redux/auth-reducer.js","components/common/Preloader/Preloader.jsx","components/Header/Header.module.css","redux/profile-reducer.js","components/Navbar/Navbar.module.css","redux/dialogs-reducer.js","utils/object-helpers.js","redux/users-reducer.js","assets/images/loading.gif","api/api.js"],"names":["Boolean","window","location","hostname","match","Navbar","className","s","nav","item","active","to","activeClassName","News","props","Music","Settings","Header","header","src","loginBlock","isAuth","onClick","logout","HeaderContainer","this","React","Component","connect","state","auth","login","SET_INITIALIZED","initialState","initialized","appReducer","action","type","sidebarReducer","reducers","combineReducers","app","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","usersReducer","authReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","UsersContainer","ProfileContainer","Login","App","initializeApp","fallback","Preloader","path","render","AppContainer","dispatch","promise","authMe","Promise","all","then","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","SET_USER_DATA","userId","email","setAuthUserData","payload","a","authAPI","response","data","id","resultCode","password","rememberMe","message","messages","length","stopSubmit","_error","loading","width","module","exports","ADD_POST","SET_USER_PROFILE","SET_PROFILE_STATUS","DELETE_POST","posts","likes","profile","status","addPostActionCreator","newPost","setProfileStatus","getProfile","profileAPI","getStatus","updateStatus","stateCopy","newPostText","filter","p","SEND_MESSAGE","dialogs","name","sendMessageCreator","body","push","updateObjectsInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SETUSERS","CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","isFollowingProgress","requestUsers","usersAPI","getUsers","totalCount","follow","followNofollow","apiFollow","bind","unfollow","apiUnFollow","apiMethod","actionCreator","followed","instance","axios","withCredentials","baseURL","headers","get","delete","post","put"],"mappings":"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","file":"static/js/main.612dec98.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={`${s.item} ${s.active}`}>\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/dialogs' activeClassName={s.active}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/news' activeClassName={s.active}>News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\n            </div>\n\n            <div className={s.item}>\n                <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\n            </div>\n         </nav>\n    );\n}\n\nexport default Navbar;","import React from 'react';\nimport s from './News.module.css';\n\nconst News = (props) => {\n    return (\n        <div>\n            News\n        </div>\n    );\n}\n\nexport default News;","import React from 'react';\nimport s from './Music.module.css';\n\nconst Music = (props) => {\n    return (\n        <div>\n            Music\n        </div>\n    );\n}\n\nexport default Music;","import React from 'react';\nimport s from './Settings.module.css';\n\nconst Settings = (props) => {\n    return (\n        <div>\n            Settings\n        </div>\n    );\n}\n\nexport default Settings;","import React from 'react'\nimport s from './Header.module.css'\nimport { NavLink } from 'react-router-dom'\n\nconst Header = (props) => {\n    return (\n        <>\n            <header className={s.header}>\n                <img src='https://static.rfstat.com/renderforest/images/v2/landing-pics/logo_landing/ma5.png'></img>\n                <div className={s.loginBlock} >\n                    { props.isAuth ? <button onClick={props.logout}>Logout</button> :  <NavLink to='/login'>Login</NavLink> }\n                </div>\n            </header>  \n        </>\n    );\n}\n\nexport default Header","import React from 'react'\nimport Header from './Header'\nimport { connect } from 'react-redux'\nimport {logout} from './../../redux/auth-reducer'\n\nclass HeaderContainer extends React.Component {\n\n    render() {\n        return <>\n            <Header {...this.props} />\n        </>\n    }\n}\n\nconst mapStateToProps  = (state) => {\n    return {\n        isAuth : state.auth.isAuth,\n        login : state.auth.login\n    }\n    \n}\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer)","import { authMe } from \"./auth-reducer\"\n\nconst SET_INITIALIZED = 'social_network/app/SET_INITIALIZED'\n\nlet initialState = {\n    initialized : false\n}\n\nconst appReducer = (state = initialState, action) => {\n\n    switch(action.type) {\n        case SET_INITIALIZED : \n        return {...state, initialized : true}\n\n        default : {\n            return state\n        }\n    }\n\n}\n\nexport const initializedSuccess = () => ({type : SET_INITIALIZED})\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(authMe())\n    // promise.then(() => {\n    //     dispatch(initializedSuccess())\n    // })\n\n    Promise.all([promise]).then(() => {\n        dispatch(initializedSuccess())\n    })\n\n    \n}\n\n\n\nexport default appReducer;","\nlet initialState = {};\n\nconst sidebarReducer = (state = initialState, action) => {\n\n    return state;\n\n}\n\nexport default sidebarReducer;","import {combineReducers, createStore, compose} from \"redux\"\nimport profileReducer from \"./profile-reducer\"\nimport dialogsReducer from \"./dialogs-reducer\"\nimport sidebarReducer from \"./sidebar-reducer\"\nimport usersReducer from \"./users-reducer\"\nimport authReducer from \"./auth-reducer\";\nimport appReducer from \"./app-reducer\"\nimport { applyMiddleware } from \"redux\"\nimport thunkMiddleware from \"redux-thunk\"\nimport { reducer as formReducer } from 'redux-form'\n\nlet reducers = combineReducers({\n    app : appReducer,\n    profilePage : profileReducer,\n    dialogsPage : dialogsReducer,\n    sidebar : sidebarReducer,\n    usersPage : usersReducer,\n    auth : authReducer,\n    form : formReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\n//window.store = store;\n\nexport default store;","import React, {Suspense, lazy} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\"\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport {initializeApp} from './redux/app-reducer'\nimport {connect} from 'react-redux'\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from \"./redux/redux-store\";\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from \"react-router-dom\";\n\nconst DialogsContainer = lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst UsersContainer = lazy(() => import('./components/Users/UsersContainer'))\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'))\nconst Login = lazy(() => import('./components/Login/Login'))\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Suspense fallback={Preloader}>\n                        <Route path='/users' render={ () => <UsersContainer/> }/>\n                        <Route path='/profile/:userId?' render={ () => <ProfileContainer/>} />\n                        <Route path='/dialogs' render={ () => <DialogsContainer /> }/>\n                        <Route path='/news' render={ () => <News/> }/>\n                        <Route path='/music' render={ () => <Music/> }/>\n                        <Route path='/settings' render={ () => <Settings/> }/>\n                        <Route path='/login' render={ () => <Login/> }/>\n                    </Suspense>\n                    \n                </div>\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    initialized : state.app.initialized\n})\n\n\nlet AppContainer = connect(mapStateToProps,{initializeApp})(App)\n\nlet MainApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default MainApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport MainApp from './App';\n\nReactDOM.render(\n        <MainApp />, document.getElementById('root')\n    );\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { authAPI } from '../api/api'\nimport {stopSubmit} from 'redux-form'\n\nconst SET_USER_DATA = 'social_network/auth/SET_USER_DATA'\n\nlet initialState = {\n    userId : null,\n    email : null,\n    login : null,\n    isAuth : false\n}\n\nconst authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case SET_USER_DATA : \n        return {\n            ...state,\n            ...action.payload\n        }\n        \n        default : {\n            return state\n        }\n\n    }\n\n\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type : SET_USER_DATA, payload : {userId, email, login, isAuth}})\n\nexport const authMe = () => async (dispatch) => {\n    let response = await authAPI.authMe();\n    let { id, email, login} = response.data\n    if (response.resultCode === 0) {\n        dispatch(setAuthUserData(id, email, login, true))\n    }\n}\n\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response  = await authAPI.login(email, password, rememberMe)\n    if (response.resultCode === 0) {\n        dispatch(authMe())\n    } else {\n        let message = response.messages.length > 0 ? response.messages[0] : 'Some error'\n        dispatch(stopSubmit('login', {_error : message}))\n    }\n}\n\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout()\n    // debugger;\n    if (response.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false))\n    }\n}\n\n\nexport default authReducer","import React from 'react';\nimport loading from './../../../assets/images/loading.gif'\n\nconst Preloader = (props) => {\n    return <img src={loading} width='100px'/>\n}\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import {profileAPI} from '../api/api'\n\nconst ADD_POST = 'social_network/profile/ADD_POST'\nconst SET_USER_PROFILE = 'social_network/profile/SET_USER_PROFILE'\nconst SET_PROFILE_STATUS = 'social_network/profile/SET_PROFILE_STATUS'\nconst DELETE_POST = 'social_network/profile/DELETE_POST'\n\nlet initialState = {\n    posts : [\n        {id : 1, message : 'Hi my friend' , likes : 1},\n        {id : 2, message : 'How are you?' , likes : 10},\n        {id : 3, message : 'How are you2?' , likes : 12},\n        {id : 4, message : 'How are you3?' , likes : 13},\n    ],\n    profile : null,\n    status : ''\n}\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST : {\n            let stateCopy = {\n                ...state,\n                newPostText : '',\n                posts : [ ...state.posts, {id : 6, message : action.newPost,likes : 0} ]\n            };\n            return stateCopy;\n        }\n        case SET_USER_PROFILE : {\n            return {...state, profile : action.profile}\n        }\n        case SET_PROFILE_STATUS : {\n            return {...state, status : action.status}\n        }\n        case DELETE_POST : {\n            return {...state, posts : state.posts.filter(p => p.id != action)}\n        }\n        default : {\n            return state;\n        }\n\n    }\n\n\n}\n\nexport const addPostActionCreator = (newPost) => ({ type : ADD_POST, newPost });\nexport const setUserProfile = (profile) => ({type : SET_USER_PROFILE, profile});\nexport const setProfileStatus = (status) => ({type : SET_PROFILE_STATUS, status})\nexport const deleteActionCreator = (id) => ({type : DELETE_POST, id})\n\nexport const getProfile = (userId) => async (dispatch) => {\n    let response = await profileAPI.getProfile(userId)\n    dispatch(setUserProfile(response))\n}\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setProfileStatus(response))\n}\n\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status);\n    if (response.resultCode === 0) dispatch(setProfileStatus(status))\n}\n\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","const SEND_MESSAGE = 'social_network/dialogs/SEND_MESSAGE'\n\nlet initialState = {\n    dialogs : [\n        {id : 1, name : 'Dimich'},\n        {id : 2, name : 'Andrei'},\n        {id : 3, name : 'Chistol'},\n        {id : 4, name : 'Musteata'},\n        {id : 5, name : 'Bahore'},\n    ],\n    messages : [\n        {id : 1, message : 'Text1'},\n        {id : 2, message : 'Text2'},\n        {id : 3, message : 'Text3'},\n        {id : 4, message : 'Text4'},\n        {id : 5, message : 'Text5'},\n    ],\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case  SEND_MESSAGE : {\n            let body = action.message;\n            let stateCopy = {...state};\n            stateCopy.messages = [...state.messages];\n            stateCopy.messages.push({id : 5, message : body});\n            return stateCopy;\n        }\n        default : {\n            return state;\n        }\n    }\n\n}\n\nexport const sendMessageCreator = (message) => ({ type : SEND_MESSAGE, message})\n\nexport default dialogsReducer;","export const updateObjectsInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map( u => {\n        if (u[objPropName] === itemId) {\n            return {\n                ...u, ...newObjProps\n            }    \n        }\n        return u;\n    })\n}","import { usersAPI } from '../api/api';\nimport { updateObjectsInArray } from '../utils/object-helpers';\n\n\nconst FOLLOW = 'social_network/users/FOLLOW';\nconst UNFOLLOW = 'social_network/users/UNFOLLOW';\nconst SETUSERS = 'social_network/users/SETUSERS';\nconst CURRENT_PAGE = 'social_network/users/CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'social_network/users/SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'social_network/users/TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'social_network/users/TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users : [],\n    pageSize : 10,\n    totalUsersCount : 0,\n    currentPage : 1,\n    isFetching : false,\n    followingInProgress : []\n}\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FOLLOW : \n        return {\n            ...state,\n            users : updateObjectsInArray(state.users, action.userId, \"id\", {followed : true})\n            // state.users.map( u => {\n            //         if (u.id === action.userId) {\n            //             return {\n            //                 ...u, followed : true\n            //             }    \n            //         }\n            //     return u;\n            //         })\n        }\n        case UNFOLLOW : \n        return {\n            ...state,\n            users : updateObjectsInArray(state.users, action.userId, \"id\", {followed : false})\n        }\n        case SETUSERS : \n        return {...state, users : action.users }\n\n        case CURRENT_PAGE :\n            return {...state, currentPage : action.currentPage}\n        \n        case SET_TOTAL_USERS_COUNT : \n            return {...state, totalUsersCount : action.totalUsersCount}\n\n        case TOGGLE_IS_FETCHING : \n            return {...state, isFetching : action.isFetching}\n\n        case TOGGLE_IS_FOLLOWING_PROGRESS : \n            return {...state, \n                followingInProgress : action.isFollowingProgress \n                ? [...state.followingInProgress, action.userId]\n                : state.followingInProgress.filter(id => id != action.userId)\n            }\n\n        default : {\n            return state;\n        }\n\n    }\n\n\n}\n\nexport const followSuccess = (userId) => ({ type : FOLLOW, userId : userId });\nexport const unfollowSuccess = (userId) => ({ type : UNFOLLOW, userId : userId });\nexport const setUsers = (users) => ({ type : SETUSERS, users : users });\nexport const setCurrentPage = (currentPage) => ({ type : CURRENT_PAGE, currentPage : currentPage });\nexport const setTotalUsersCount = (totalUsersCount) => ({ type : SET_TOTAL_USERS_COUNT, totalUsersCount});\nexport const toggleIsFetching = (isFetching) => ({ type : TOGGLE_IS_FETCHING, isFetching});\nexport const toggleIsFollowingProgress = (isFollowingProgress, userId) => ({ type : TOGGLE_IS_FOLLOWING_PROGRESS, isFollowingProgress, userId});\n\nexport const requestUsers = (currentPage, pageSize) => { \n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true))\n        let response = await usersAPI.getUsers(currentPage, pageSize)\n        dispatch(toggleIsFetching(false))\n        dispatch(setUsers(response.items))\n        dispatch(setTotalUsersCount(response.totalCount))\n    }\n}\n\nexport const follow = (userId) =>  async (dispatch) => {\n    followNofollow(dispatch, userId, usersAPI.apiFollow.bind(usersAPI), followSuccess)\n}\n\nexport const unfollow = (userId) => async (dispatch) => {\n    followNofollow(dispatch, userId, usersAPI.apiUnFollow.bind(usersAPI), unfollowSuccess)\n}\n\nconst followNofollow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleIsFollowingProgress(true, userId))\n    let response = await apiMethod(userId)\n    if (response.resultCode === 0) {\n        dispatch(actionCreator(userId)) \n    }\n    dispatch(toggleIsFollowingProgress(false, userId))\n}\n\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/loading.e4b6323e.gif\";","\nimport * as axios from 'axios';\n\nconst instance = axios.create({\n    withCredentials : true,\n    baseURL : `https://social-network.samuraijs.com/api/1.0/`,\n    headers : {\n        \"API-KEY\": \"504e59bf-095b-4a7f-b7d5-e04c93e0aea8\"\n    }\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => { \n            return response.data \n        })\n    },\n    apiUnFollow(userId) {\n        return instance.delete(`follow/` + userId).then(response => {\n            return response.data;\n        })\n    },\n    apiFollow(userId) {\n        return instance.post(`follow/` + userId,{}).then(response => {\n            return response.data;\n        })\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId).then(response => {\n            return response.data;\n        })\n    },\n    getStatus(userId) {\n        return instance.get('profile/status/' + userId).then(response => {\n            return response.data\n        })\n    },\n    updateStatus(status) {\n        return instance.put('profile/status', {\n            status : status\n        }).then(response => {\n            return response.data\n        })\n    }\n}\n\nexport const authAPI = {\n    authMe() {\n        return instance.get(`auth/me`).then(response => {\n            return response.data;\n        })\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`,{email, password, rememberMe}).then(response => {\n            return response.data\n        })\n    },\n    logout() {\n        return instance.delete(`auth/login`).then(response => {\n            return response.data\n        })\n    }\n}\n\n"],"sourceRoot":""}