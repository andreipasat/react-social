{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Login/Login.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","Textarea","input","meta","touched","error","props","hasError","className","styles","formControl","Input","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","placeholder","name","component","validate","type","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,iCCD3H,oEAAO,IAAMC,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oJCH9BE,EAAW,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,MAA4C,IAAtCC,KAAQC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,MAAUC,EAAW,gCAC5DC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KAClE,6BACI,8CAAcH,EAAWI,KAE5BC,GAAY,8BAAOF,KAMnBM,EAAQ,SAAC,GAA8C,IAA7CT,EAA4C,EAA5CA,MAA4C,IAAtCC,KAAQC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,MAAUC,EAAW,gCACzDC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KAClE,6BACI,2CAAWH,EAAWI,KAEzBC,GAAY,8BAAOF,M,iCCvBhC,wGA+BMO,EAAiBC,YAAW,CAC9BC,KAAO,SADYD,EAtBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcV,EAAW,EAAXA,MAC9B,OACI,0BAAMW,SAAUD,GACR,6BACI,kBAAC,IAAD,CAAOE,YAAa,QAASC,KAAM,QAASC,UAAWR,IAAOS,SAAU,CAACxB,QAE7E,6BACI,kBAAC,IAAD,CAAOqB,YAAa,WAAYC,KAAM,WAAYC,UAAWR,IAAOS,SAAU,CAACxB,KAAWyB,KAAM,cAEpG,6BACI,kBAAC,IAAD,CAAOF,UAAWR,IAAOO,KAAM,aAAcG,KAAM,aADvD,gBAGChB,GAAS,yBAAKG,UAAWC,IAAOa,kBAC5BjB,GAEL,6BACI,8CA8BLkB,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAASD,EAAME,KAAKD,UAGe,CAACE,WAAzBJ,EApBD,SAACjB,GAKX,OAAIA,EAAMmB,OAAe,kBAAC,IAAD,CAAUG,GAAI,aAGnC,6BACI,qCACA,kBAAChB,EAAD,CAAgBI,SATP,SAACa,GACdvB,EAAMqB,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.bf6c5b07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","export const required = value => {\n    if (value) return undefined\n    return 'Field is required'\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`\n    return undefined\n}","import React from 'react'\nimport styles from './FormsControls.module.css'\n\nexport const Textarea = ({input,meta : {touched, error},...props}) => {\n    const hasError = touched && error\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\n            <div>\n                <textarea {...input} {...props}/>\n            </div>\n            {hasError && <span>{error}</span> }\n        </div>\n\n    )\n}\n\nexport const Input = ({input,meta : {touched, error},...props}) => {\n    const hasError = touched && error\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\n            <div>\n                <input {...input} {...props}/>\n            </div>\n            {hasError && <span>{error}</span> }\n        </div>\n\n    )\n}\n","import React from 'react';\nimport {Field, reduxForm} from 'redux-form'    \nimport { Input } from '../common/FormsControls/FormsControls';\nimport { required } from '../../utils/validators/validators';\nimport {login} from '../../redux/auth-reducer'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport styles from '../common/FormsControls/FormsControls.module.css'\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n                <div>\n                    <Field placeholder={'Email'} name={'email'} component={Input} validate={[required]}/>\n                </div>\n                <div>\n                    <Field placeholder={'Password'} name={'password'} component={Input} validate={[required]} type={'password'}/>\n                </div>\n                <div>\n                    <Field component={Input} name={'rememberMe'} type={'checkbox'}/> remember me\n                </div>\n                {error && <div className={styles.formSummaryError}>\n                    {error}\n                </div>}\n                <div>\n                    <button>Login</button>\n                </div>\n            </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm( {\n    form : 'login'\n})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n\n    if (props.isAuth) return <Redirect to={'/profile'}/>\n\n    return (\n        <div>\n            <h1>Login</h1>   \n            <LoginReduxForm onSubmit={onSubmit} />\n        </div>\n        \n    )\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth : state.auth.isAuth\n})\n\nexport default connect(mapStateToProps,{login})(Login);"],"sourceRoot":""}